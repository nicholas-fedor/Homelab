#---------------------------------------------------------------------#
#                              Paperless-ngx                          #
#---------------------------------------------------------------------#
name: paperless-ngx

networks:
  proxy:
    external: true
  paperless-backend:
    external: false

secrets:
  PAPERLESS_ADMIN_USER:
    file: ./secrets/PAPERLESS_ADMIN_USER
  PAPERLESS_ADMIN_MAIL:
    file: ./secrets/PAPERLESS_ADMIN_MAIL
  PAPERLESS_ADMIN_PASSWORD:
    file: ./secrets/PAPERLESS_ADMIN_PASSWORD
  PAPERLESS_SECRET_KEY:
    file: ./secrets/PAPERLESS_SECRET_KEY

services:
  paperless-ngx-redis:
    container_name: paperless-ngx-redis
    image: docker.io/library/redis:7
    restart: unless-stopped
    networks:
      - paperless-backend
    volumes:
      - ./data/database/redis:/data

  paperless-ngx-postgres:
    container_name: paperless-ngx-postgres
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    image: docker.io/library/postgres:16
    networks:
      - paperless-backend
    restart: unless-stopped
    volumes:
      - ./data/database/postgres:/var/lib/postgresql/data

  paperless-ngx-server:
    container_name: paperless-ngx-server
    depends_on:
      - paperless-ngx-redis
      - paperless-ngx-postgres
      - paperless-ngx-gotenberg
      - paperless-ngx-tika
    env_file: .env
    environment:
      PAPERLESS_ADMIN_USER_FILE: /run/secrets/PAPERLESS_ADMIN_USER
      PAPERLESS_ADMIN_MAIL_FILE: /run/secrets/PAPERLESS_ADMIN_MAIL
      PAPERLESS_ADMIN_PASSWORD_FILE: /run/secrets/PAPERLESS_ADMIN_PASSWORD
      PAPERLESS_SECRET_KEY_FILE: /run/secrets/PAPERLESS_SECRET_KEY
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.paperless.rule=Host(`paperless.nickfedor.dev`)
      - traefik.http.routers.paperless.entrypoints=https
      - traefik.http.routers.paperless.service=paperless
      - traefik.http.services.paperless.loadbalancer.server.port=8000
      - traefik.http.routers.paperless.tls=true
      - traefik.http.routers.paperless.tls.certresolver=cloudflare
      - traefik.http.routers.paperless.middlewares=authentik@file
    networks:
      - proxy
      - paperless-backend
    ports:
      - 8000:8000
    restart: unless-stopped
    secrets:
      - PAPERLESS_ADMIN_USER
      - PAPERLESS_ADMIN_MAIL
      - PAPERLESS_ADMIN_PASSWORD
      - PAPERLESS_SECRET_KEY
    volumes:
      - ./data/paperless-data:/usr/src/paperless/data
      - ./data/media:/usr/src/paperless/media
      - ./data/export:/usr/src/paperless/export
      - ./data/import:/usr/src/paperless/consume

  paperless-ngx-gotenberg:
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    container_name: paperless-ngx-gotenberg
    image: docker.io/gotenberg/gotenberg:8.7
    networks:
      - paperless-backend
    restart: unless-stopped

  paperless-ngx-tika:
    container_name: paperless-ngx-tika
    image: docker.io/apache/tika:latest
    networks:
      - paperless-backend
    restart: unless-stopped