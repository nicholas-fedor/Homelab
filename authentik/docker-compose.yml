#---------------------------------------------------------------------#
#                                Authentik                            #
#---------------------------------------------------------------------#
name: authentik

services:
  authentik-postgresql:
    container_name: authentik-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    image: postgres:16-alpine
    networks:
      - storage
    restart: unless-stopped
    volumes:
      - database:/var/lib/postgresql/data

  authentik-redis:
    container_name: authentik-redis
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data
    networks:
      - storage
    command: --save 60 1 --loglevel warning

  authentik-server:
    container_name: authentik-server
    image: ghcr.io/goauthentik/server:2024.8.3
    restart: unless-stopped
    depends_on:
      - authentik-postgresql
      - authentik-redis
    volumes:
      - ./data/media:/media
      - ./data/custom-templates:/templates
    networks:
      - proxy
      - storage
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-postgresql
      - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB}
      - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.authentik.rule=Host(`authentik.nickfedor.dev`)
      - traefik.http.routers.authentik.entrypoints=https
      - traefik.http.routers.authentik.service=authentik
      - traefik.http.services.authentik.loadbalancer.server.port=9000
      - traefik.http.routers.authentik.tls=true
      - traefik.http.routers.authentik.tls.certresolver=cloudflare

  authentik-worker:
    container_name: authentik-worker
    image: ghcr.io/goauthentik/server:2024.8.3
    restart: unless-stopped
    depends_on:
      - authentik-postgresql
      - authentik-redis
    user: root
    command: worker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/media:/media
      - ./data/certs:/certs
      - ./data/custom-templates:/templates
    networks:
      - storage
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-postgresql
      - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB}
      - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}

networks:
  proxy:
    external: true
  storage:
    external: false


volumes:
  database:
    driver: local
  redis:
    driver: local